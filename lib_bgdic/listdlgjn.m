function [Selection, Ok] = listdlgjn(Prompt,Title,List,SelMode,Position)
% function similar to listdlg, except simpler and with the option to
% position it.

%     [selection,ok] = listdlg(...
%         'Name','Select strain definition',...
%         'PromptString','Select strain definition',...
%         'SelectionMode','Single',...
%         'ListSize',[180 100],...
%         'ListString',str);

if strcmpi(SelMode,'Single')
    Max = 1;
else
    Max = 2;
end

if ~iscell(Prompt)
    Prompt = {Prompt};
end

fontsize = 12;
L = length(List);
N = length(Prompt) + L;
M = max(cellfun('length',Prompt));

Figheight = N*2.0*fontsize + 3.5*fontsize;
Figwidth = M*1.2*fontsize + 2*fontsize;
Figpos(3:4) = [Figwidth Figheight];
Figpos(1:2) = Position - 0.5*Figpos(3:4);

FigColor=get(0,'DefaultUicontrolBackgroundColor');
WindowStyle='modal';
Interpreter='none';
Resize = 'off';

H =    dialog(                     ...
  'Visible'          ,'on'      , ...
  'Name'             ,Title      , ...
  'Pointer'          ,'arrow'    , ...
  'Units'            ,'pixels'   , ...
  'UserData'         ,'Cancel'   , ...
  'Tag'              ,Title      , ...
  'HandleVisibility' ,'callback' , ...
  'Color'            ,FigColor   , ...
  'NextPlot'         ,'add'      , ...
  'WindowStyle'      ,WindowStyle, ...
  'Resize'           ,Resize,      ...
  'Position'         ,Figpos       ...
  );


xpos = linspace(0.03,0.98,3);
ypos = linspace(0.05,0.98,N+3);
height = 1.4*mean(diff(ypos));
width = 0.9*mean(diff(xpos));

% Create title
uicontrol('String',Title,...
    'Style','text',...
    'HorizontalAlignment','center',...
    'units','normalized',...
    'Position',[xpos(1) ypos(L+2)+0.02 xpos(end)-xpos(1) (0.96-ypos(L+2))],...
    'FontSize',fontsize,...
    'Parent',H);

% list box
h = uicontrol('String',List,...
    'Style','listbox',...
    'units','normalized',...
    'BackgroundColor','w',...
    'Max',Max,...
    'Position',[xpos(1)  ypos(3) xpos(end)-xpos(1) ypos(L+2)-ypos(3)],...
    'FontSize',fontsize,...
    'Parent',H,...
    'call',{@pressListbox,H});

uicontrol('String','Ok',...
    'ToolTipString','confirm input',...
    'Style','pushbutton',...
    'units','normalized',...
    'Position',[xpos(1) ypos(1) width height],...
    'FontSize',fontsize,...
    'Parent',H,...
    'call',{@pressOk,H,h});

uicontrol('String','Cancel',...
    'ToolTipString','cancel input',...
    'Style','pushbutton',...
    'units','normalized',...
    'Position',[xpos(2) ypos(1) width height],...
    'FontSize',fontsize,...
    'Parent',H,...
    'call',{@pressCancel,H,h});

set(H,'KeyPressFcn',{@doFigureKeyPress,H,h})

uiwait(H)

if ishandle(H)
    Selection = guidata(H);
    delete(H);
else
    Selection = [];
end
if isempty(Selection)
    Ok = 0;
else
    Ok = 1;
end

function doFigureKeyPress(obj, evd, H ,h) %#ok
switch(evd.Key)
  case {'return','space'}
      pressOk([],[],H,h);
  case {'escape'}
      pressCancel([],[],H,h);
end

function pressOk(varargin)
H = varargin{3};
h = varargin{4};
selection = get(h,'Value');
guidata(H,selection);
uiresume(H);

function pressCancel(varargin)
H = varargin{3};
selection=[];
guidata(H,selection);
uiresume(H);

function pressListbox(varargin)
h = varargin{1};
H = varargin{3};
if get(h,'UserData') == get(h,'Value')
    selection = get(h,'Value');
    guidata(H,selection);
    uiresume(H);
end
set(h,'UserData',get(h,'Value'));






