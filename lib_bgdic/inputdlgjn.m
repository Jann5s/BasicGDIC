function Answer=inputdlgjn(Prompt, Title, NumLines, DefAns, Position)
% function similar to inputdlg, except simpler and with the option to
% position it.

fontsize = 12;
N = length(Prompt);
M = max(cellfun('length',Prompt));

Figheight = N*2.0*fontsize + 6*fontsize + 2.5*fontsize;
Figwidth = M*1*fontsize + 10*1*fontsize + 2.5*fontsize;
Figpos(3:4) = [Figwidth Figheight];
Figpos(1:2) = Position - 0.5*Figpos(3:4);

FigColor=get(0,'DefaultUicontrolBackgroundColor');
WindowStyle='modal';
Interpreter='none';
Resize = 'off';

H =    dialog(                     ...
  'Visible'          ,'on'      , ...
  'Name'             ,Title      , ...
  'Pointer'          ,'arrow'    , ...
  'Units'            ,'pixels'   , ...
  'UserData'         ,'Cancel'   , ...
  'Tag'              ,Title      , ...
  'HandleVisibility' ,'callback' , ...
  'Color'            ,FigColor   , ...
  'NextPlot'         ,'add'      , ...
  'WindowStyle'      ,WindowStyle, ...
  'Resize'           ,Resize,      ...
  'Position'         ,Figpos       ...
  );


xpos = linspace(0.03,0.98,3);
ypos = linspace(0.18,0.75,N+1);
height = 0.98*mean(diff(ypos));
width = 0.9*mean(diff(xpos));

% Create title
uicontrol('String',Title,...
    'Style','text',...
    'HorizontalAlignment','center',...
    'units','normalized',...
    'Position',[xpos(1) ypos(end)+0.02 xpos(end)-xpos(1) 1-(ypos(end)+0.02)],...
    'FontSize',fontsize,...
    'Parent',H);


% Create the input boxes
for k = 1:N
    uicontrol('String',Prompt{k},...
        'Style','text',...
        'HorizontalAlignment','left',...
        'units','normalized',...
        'Position',[xpos(1) ypos(1+N-k) width height],...
        'FontSize',fontsize,...
        'Parent',H);
    h(k) = uicontrol('String',DefAns{k},...
        'Style','edit',...
        'BackgroundColor','w',...
        'units','normalized',...
        'Position',[xpos(2) ypos(1+N-k) width height],...
        'FontSize',fontsize,...
        'Parent',H);
end

uicontrol('String','Ok',...
    'ToolTipString','confirm input',...
    'Style','pushbutton',...
    'units','normalized',...
    'Position',[xpos(1) 0.02 width height],...
    'FontSize',fontsize,...
    'Parent',H,...
    'call',{@pressOk,H,h});

uicontrol('String','Cancel',...
    'ToolTipString','cancel input',...
    'Style','pushbutton',...
    'units','normalized',...
    'Position',[xpos(2) 0.02 width height],...
    'FontSize',fontsize,...
    'Parent',H,...
    'call',{@pressCancel,H,h});

set(H,'KeyPressFcn',{@doFigureKeyPress,H,h})


uiwait(H)

if ishandle(H)
    Answer = guidata(H);
    delete(H);
else
    Answer = [];
end

function doFigureKeyPress(obj, evd, H ,h) %#ok
switch(evd.Key)
  case {'return','space'}
      pressOk([],[],H,h);
  case {'escape'}
      pressCancel([],[],H,h);
end

function pressOk(varargin)
H = varargin{3};
h = varargin{4};
for k = 1:length(h)
    answer{k} = get(h(k),'String');
end
guidata(H,answer);
uiresume(H);

function pressCancel(varargin)
H = varargin{3};
answer=[];
guidata(H,answer);
uiresume(H);


